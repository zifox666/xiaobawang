"""first revision

迁移 ID: d9827344f67e
父迁移:
创建时间: 2025-05-16 14:09:02.632731

"""

from __future__ import annotations

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa

revision: str = "d9827344f67e"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = ("weather",)
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "blacklist",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_blacklist")),
        info={"bind_key": "core"},
    )
    with op.batch_alter_table("blacklist", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_blacklist_id"), ["id"], unique=True)

    op.create_table(
        "command_record",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("source", sa.String(), nullable=False),
        sa.Column("origin", sa.String(), nullable=False),
        sa.Column("sender", sa.String(), nullable=False),
        sa.Column("event", sa.String(), nullable=False),
        sa.Column("session", sa.String(), nullable=False),
        sa.Column("time", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_command_record")),
        info={"bind_key": "core"},
    )
    with op.batch_alter_table("command_record", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_command_record_id"), ["id"], unique=True)

    op.create_table(
        "killmail_condition_subscription",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("platform", sa.String(), nullable=False),
        sa.Column("bot_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("session_type", sa.String(), nullable=False),
        sa.Column("target_type", sa.String(), nullable=False),
        sa.Column("target_id", sa.Integer(), nullable=False),
        sa.Column("target_name", sa.String(), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column("is_victim", sa.Boolean(), nullable=False),
        sa.Column("is_final_blow", sa.Boolean(), nullable=False),
        sa.Column("min_value", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_killmail_condition_subscription")),
        info={"bind_key": "core"},
    )
    op.create_table(
        "killmail_high_value_subscription",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("platform", sa.String(), nullable=False),
        sa.Column("bot_id", sa.String(), nullable=False),
        sa.Column("session_id", sa.String(), nullable=False),
        sa.Column("session_type", sa.String(), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column("min_value", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_killmail_high_value_subscription")),
        info={"bind_key": "core"},
    )
    op.create_table(
        "killmail_push_record",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("sender", sa.Integer(), nullable=False),
        sa.Column("send_type", sa.String(), nullable=False),
        sa.Column("killmail_id", sa.Integer(), nullable=False),
        sa.Column("reason", sa.String(), nullable=False),
        sa.Column("time", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_killmail_push_record")),
        info={"bind_key": "core"},
    )
    with op.batch_alter_table("killmail_push_record", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_killmail_push_record_id"), ["id"], unique=True)

    op.create_table(
        "type_alias",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("alia", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_type_alias")),
        info={"bind_key": "core"},
    )
    # ### end Alembic commands ###


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("type_alias")
    with op.batch_alter_table("killmail_push_record", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_killmail_push_record_id"))

    op.drop_table("killmail_push_record")
    op.drop_table("killmail_high_value_subscription")
    op.drop_table("killmail_condition_subscription")
    with op.batch_alter_table("command_record", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_command_record_id"))

    op.drop_table("command_record")
    with op.batch_alter_table("blacklist", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_blacklist_id"))

    op.drop_table("blacklist")
    # ### end Alembic commands ###
